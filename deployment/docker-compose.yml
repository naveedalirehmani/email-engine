version: '3.8'

services:
  portal:
    build:
      context: ../portal
    ports:
      - "3000:3000"
    depends_on:
      - server
      - db
    environment:
      - NEXT_PUBLIC_SERVER=http://server:4000/v1
    networks:
      - custom_bridge

  server:
    build:
      context: ../server
    ports:
      - "4000:4000"
    depends_on:
      - db
    environment:
      - NODE_ENV=DEV
      - DATABASE_URL=mysql://root:rootpassword@db:3306/mydatabase
      - PORT=4000
      - BYCRYPT_SALT=11
      - SECRET_KEY=e53a867df61df580f3e6f1231232sdfeb4e6fdf8ee8599a8c5c6f1478122ab5e3b
      - CLIENT_SERVER=http://localhost:3000
      - GOOGLE_CLIENT_ID=your_google_client_id # Not requried for now.
      - GOOGLE_CLIENT_SECRET=your_google_client_secret # Not requried for now.
      - OUTLOOK_CLIENT_ID=PLACEHOLDER_VALUE # Outlook OAuth client ID ( REQUIRED! )
      - OUTLOOK_CLIENT_SECRET=PLACEHOLDER_VALUE # Outlook OAuth client secret ( REQUIRED! )
      - REDIRECT_URI=http://localhost:4000/v1/authentication/oauth/outlook/callback
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WINDOW_SIZE_IN_SECONDS=60
      - MAX_WINDOW_REQUEST_COUNT=10
      - REDIS_PASSWORD=redispassword
    networks:
      - custom_bridge

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=mydatabase
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - custom_bridge

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=redispassword
    command: [ "redis-server", "--requirepass", "redispassword" ]
    volumes:
      - redis_data:/data
    networks:
      - custom_bridge

volumes:
  db_data:
  redis_data:

networks:
  custom_bridge:
    driver: bridge
